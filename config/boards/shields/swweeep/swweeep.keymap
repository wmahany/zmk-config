#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define RAISE   1
#define LOWER   2
#define MEDIA   3
#define ADJUST  4

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_undo {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LC(Z)>;
        };
        combo_q {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp Q>;
        };
        combo_semicolon {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp SEMI>;
        };
    };
};

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

            bindings = <
    &kp W        &kp L        &kp Y       &kp P          &kp B                                       &kp Z            &kp F       &kp O          &kp U        &kp ASTRK
    &kp C        &kp R        &kp S       &kp T          &kp G                                       &kp M            &kp N       &kp E          &kp I        &kp A
    &hm LSHIFT Q &hm LGUI J   &hm LALT V  &hm  LCTL D    &hm K                                       &hm X            &hm RCTL H  &hm RALT COMMA &hm RGUI DOT &hm RSHIFT SLASH
                                          &lt LOWER ESC  &kp LSFT  &hm LGUI TAB          &kp ENTER   &lt MEDIA SPACE  &kp RAISE BSPC
            >;
        };

        nav_layer {
            label = "RAISE";

            bindings = <
    &kp N1    &kp N2     &kp N3       &kp N4    &kp N5                   &kp N6    &kp N7   &kp N8   &kp N9    &kp N0
    &kp LBKT  &kp RBKT   &kp LPAR &kp RPAR &kp PG_UP                      &kp LEFT  &kp DOWN &kp UP   &kp RIGHT &kp MINUS
    &kp TILDE &kp GRAVE  &kp LBRC &kp RBRD &kp PG_DN                      &kp BACKSLASH  &kp HOME &kp END  &trans    &kp EQUAL
                                &trans &trans &trans     &trans &trans &trans
            >;
        };

        sym_layer {
            label = "LOWER";

            bindings = <
  &kp EXCL &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                      &kp CIRC &kp N7  &kp N8    &kp N9 &kp COLON
  &kp PRCNT &kp CARET &kp AMPS  &kp STAR &trans                      &trans &kp N4  &kp N5    &kp N6 &kp DOT
  &kp TILDE &kp GRAVE  &kp PIPE &kp BSLS &kp SEMI                      &trans &kp N1  &kp N2    &kp N3 &kp SLSH
                             &trans &trans&trans      &trans &kp 0 &trans
            >;
        };

        func_layer {
            label = "MEDIA";

            bindings = <
  &kp F1   &kp F2  &kp F3    &kp F4 &trans                       &trans &kp K_MUTE &kp K_VOL_DN  &kp K_VOL_UP    &trans
  &kp F5   &kp F6  &kp F7    &kp F8 &trans                       &trans &kp K_PP &kp K_NEXT  &kp K_PREV   &trans
  &kp F9   &kp F10 &kp F11   &kp F12 &trans                      &trans &kp C_BRI_DN &kp C_BRI_UP  &trans  &trans
                               &trans &trans&trans       &trans&trans &trans
            >;
        };

  //       media_layer {
  //           label = "ADJUST";

  //           bindings = <
  // &trans &trans  &trans  &trans &trans                      &kp WH_L MS_WHD  MS_WHU   &kp WH_R  &trans
  // &trans  MS_SP0   MS_SP1   MS_SP2 &trans                      MS_LEFT MS_DOWN MS_UP    MS_RIGHT &trans
  // QWERTY  COLEMAK  &trans   CANARY &trans                      &trans MS_BTN1 MS_BTN3  MS_BTN2  RESET
  //                              &trans &trans&trans      &trans&trans &trans
  //           >;
  //       };

    };
};
